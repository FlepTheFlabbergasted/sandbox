// Inspired by https://codepen.io/Gogh/pen/gOqVqBx

#string-rings {
  // https://stackoverflow.com/a/12231680/11763719
  -moz-user-select: -moz-none;
  -khtml-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;

  #ring-controls-container {
    position: absolute;
    top: 15px;
    left: 15px;

    transition: all 0.5s ease-in-out;
    // opacity: 0;

    &:hover {
      opacity: 1;
    }

    .ring-selection-control-label {
      width: 7ch;
    }

    .control-button {
      background: none;
      outline: none;
      border: none;
      padding: 0;
      color: var(--color-text);
      font-size: 2em;
      line-height: 0.6em;
      transition: all 0.3s ease-in-out;
      cursor: pointer;

      &:hover {
        filter: drop-shadow(0 0 8px var(--color-text));
      }
    }
  }

  #rings-container {
    position: relative;
    width: 700px;
    height: 700px;

    &:hover .ring {
      box-shadow:
        0px 0px 0px 3px var(--color),
        inset 0px 0px 0px 3px var(--color);
      filter: drop-shadow(0 0 12px var(--color));
    }
  }

  .ring {
    position: absolute;
    inset: 0;
    box-shadow:
      0px 0px 0px 0px #fff,
      inset 0px 0px 0px 2px #fff;
    transition: all 0.3s linear;
    pointer-events: none;

    border-radius: var(--border-radius-top-left, 50%) var(--border-radius-top-right, 50%)
      var(--border-radius-bottom-right, 50%) var(--border-radius-bottom-left, 50%) / 50% 50% 50% 50%;
    // TODO: To not have a jump to the beginning of the animation I use "infinite alternate-reverse" here, but I would like to
    // have it continue "forwards" forever instead
    // animation: animate-border-rad-n-rotatation 10s linear infinite alternate-reverse;

    // We don't animate x and y just z
    transform: rotateX(var(--rotation-x, 0deg)) rotateY(var(--rotation-y, 0deg)) rotateZ(var(--rotation-z, 360deg));

    @keyframes animate-border-rad-n-rotatation {
      from {
        transform: rotateX(var(--rotation-x, 0deg)) rotateY(var(--rotation-y, 0deg)) rotateZ(0deg);
      }
      to {
        transform: rotateX(var(--rotation-x, 0deg)) rotateY(var(--rotation-y, 0deg)) rotateZ(var(--rotation-z, 360deg));
      }
    }
  }

  .container-interactions {
    width: 100%;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 24px;

    opacity: 0;
    transition: all 0.5s ease-in-out;

    &:hover {
      opacity: 1;
    }
  }
}
