@use 'sass:color';

@font-face {
  font-family: ocr-a-extended;
  src: url('../public/fonts/OCRAEXT.TTF') format('opentype');
}

#retrofuturism {
  --primary-rgb: 199, 163, 20;
  --primary-hsl: hsl(48, 82%, 43%);
  --primary-rgb-TEST: rgb(199, 163, 20);

  color: rgb(var(--primary-rgb));
  font-family: 'ocr-a-extended';
  font-weight: bold;
  padding: 24px;

  .filled {
    color: var(--color-background);
    background: rgb(var(--primary-rgb));
  }

  .bordered {
    border: 4px solid rgb(var(--primary-rgb));
  }

  .padding-sm {
    padding: 4px;
  }
  .padding-md {
    padding: 8px;
  }

  .vertical-center {
    display: flex;
    align-items: center;
  }

  .horizontal-center {
    display: flex;
    justify-content: center;
  }

  .info-window-heading-1 {
    border-bottom: 4px solid rgb(var(--primary-rgb));
  }

  .info-window-heading-2 {
    display: grid;
    grid-template-columns: 5fr 3fr;
    border-bottom: 4px solid rgb(var(--primary-rgb));
  }

  .horizontal-right {
    display: flex;
    justify-content: flex-end;
  }

  .with-footer {
    display: flex;
    flex-direction: column;
  }

  .footer {
    margin-top: auto;
  }

  .list-item {
    padding: 4px 8px;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;

    &:active,
    &:focus {
      outline: none;
      @extend .filled;
    }
  }

  .anim-blink {
    animation: blink 2s steps(2, start) infinite;
  }

  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;

    background: linear-gradient(
      rgb(var(--primary-rgb), 0.1),
      rgb(var(--primary-rgb), 0.1) 3px,
      transparent 3px,
      transparent 9px
    );
    background-size: 100% 7px;
    // animation: pan-overlay 60s infinite linear;
  }

  .container {
    display: grid;
    height: 100%;
    grid-template-columns: 5fr 3fr;
    grid-template-rows: 0.5fr 8fr;
    gap: 24px 24px;
    grid-auto-flow: row;
    grid-template-areas:
      'banner banner'
      'left right';
  }

  .banner {
    grid-area: banner;
  }

  .left {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 2fr 1fr;
    gap: 24px 24px;
    grid-auto-flow: row;
    grid-template-areas:
      'planet'
      'transmissions-n-broadcast';
    grid-area: left;
  }

  .planet {
    grid-area: planet;
  }

  .transmissions-n-broadcast {
    display: grid;
    grid-template-columns: 2.5fr 1fr;
    grid-template-rows: 1fr;
    gap: 24px 24px;
    grid-auto-flow: row;
    grid-template-areas: 'transmissions broadcast';
    grid-area: transmissions-n-broadcast;
  }

  .broadcast {
    grid-area: broadcast;
  }

  .transmissions {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 1fr;
    gap: 24px 24px;
    grid-auto-flow: row;
    grid-template-areas:
      '.'
      '.';
    grid-area: transmissions;
  }

  .right {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 3fr 0.5fr 4.5fr;
    gap: 24px 24px;
    grid-auto-flow: row;
    grid-template-areas:
      'sat-data-link'
      'upload'
      'fuses';
    grid-area: right;
  }

  .sat-data-link {
    grid-area: sat-data-link;
  }

  .upload {
    grid-area: upload;
  }

  .fuses {
    grid-area: fuses;
  }

  .transmission-1 {
    display: flex;
    flex-direction: column;
  }

  #tiles-container {
    flex: 1;
    display: grid;
    grid-template-columns: repeat(var(--tile-columns), 1fr);
    grid-template-rows: repeat(var(--tile-rows), 1fr);

    .tile {
      border: 2px solid var(--color-background);
      // "CSS variable to SASS color" to use CSS relative colors since i don't like sass variables
      $color: 'hsl(from var(--primary-hsl) h s l / var(--tile-opacity))';
      background: unquote($color);

      &:hover {
        border-color: rgb(var(--primary-rgb));
      }
    }
  }

  @keyframes pan-overlay {
    from {
      background-position: 0% 0%;
    }
    to {
      background-position: 0% -100%;
    }
  }

  @keyframes blink {
    to {
      visibility: hidden;
    }
  }
}
