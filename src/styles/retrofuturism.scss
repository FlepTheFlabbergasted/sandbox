@use 'sass:string';
@use 'sass:color';

// https://www.youtube.com/watch?v=7KDlPgRUm6w&list=PLDCHtNttcDy8-TyJw6uyimX0pzeaWCiIA&index=8&ab_channel=TinSleeves

@font-face {
  font-family: ocr-a-extended;
  src: url('../public/fonts/OCR-A-EXT.ttf') format('opentype');
}

@property --rssi-nr {
  syntax: '<integer>';
  initial-value: 69;
  inherits: false;
}

@property --sat-data-link-upload-speed-nr {
  syntax: '<integer>';
  initial-value: 0;
  inherits: false;
}

#retrofuturism {
  --primary-color: hsl(48, 82%, 43%);
  --primary-color-op50: hsl(from var(--primary-color) h s l / 0.5);

  color: var(--primary-color);
  font-family: 'ocr-a-extended';
  font-weight: bold;
  padding: 24px;

  .filled {
    color: var(--color-background) !important;
    background: var(--primary-color) !important;

    &--pale {
      color: var(--color-background) !important;
      background: var(--primary-color-op50) !important;
    }
  }

  .bordered {
    border: 4px solid var(--primary-color);
  }

  .padding-sm {
    padding: 4px;
  }
  .padding-md {
    padding: 8px;
  }
  .padding-lg {
    padding: 16px;
  }

  .vertical-center {
    display: flex;
    align-items: center;
  }

  .horizontal-center {
    display: flex;
    justify-content: center;
  }

  .info-window-heading-1 {
    border-bottom: 4px solid var(--primary-color);
  }

  .info-window-heading-2 {
    display: grid;
    grid-template-columns: 5fr 3fr;
    border-bottom: 4px solid var(--primary-color);
  }

  .horizontal-right {
    display: flex;
    justify-content: flex-end;
  }

  .with-footer {
    display: flex;
    flex-direction: column;
  }

  .footer {
    margin-top: auto;
  }

  .list-item {
    padding: 4px 8px;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    background: none;

    &:active,
    &:focus {
      outline: none;
      @extend .filled;
    }
  }

  .anim-blink {
    animation: blink 2s steps(2, start) infinite;
  }

  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;

    background: linear-gradient(
      hsl(from var(--primary-color) h s l / 0.1),
      hsl(from var(--primary-color) h s l / 0.1) 3px,
      transparent 3px,
      transparent 9px
    );
    background-size: 100% 7px;
    // animation: pan-overlay 60s infinite linear;
  }

  .container {
    display: grid;
    height: 100%;
    grid-template-columns: minmax(0, 5fr) minmax(0, 3fr);
    grid-template-rows: minmax(0, 0.5fr) minmax(0, 8fr);
    gap: 24px 24px;
    grid-auto-flow: row;
    grid-template-areas:
      'banner banner'
      'left right';
  }

  .banner {
    grid-area: banner;
  }

  .left {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 2fr 1fr;
    gap: 24px 24px;
    grid-auto-flow: row;
    grid-template-areas:
      'planet'
      'transmissions-n-broadcast';
    grid-area: left;
  }

  .planet {
    grid-area: planet;
  }

  .transmissions-n-broadcast {
    display: grid;
    grid-template-columns: 2.5fr 1fr;
    grid-template-rows: 1fr;
    gap: 24px 24px;
    grid-auto-flow: row;
    grid-template-areas: 'transmissions broadcast';
    grid-area: transmissions-n-broadcast;
  }

  .broadcast {
    grid-area: broadcast;
  }

  .transmissions {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 1fr;
    gap: 24px 24px;
    grid-auto-flow: row;
    grid-template-areas:
      '.'
      '.';
    grid-area: transmissions;
  }

  .right {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 5fr 1fr 5.5fr;
    gap: 24px 24px;
    grid-auto-flow: row;
    grid-template-areas:
      'sat-data-link'
      'upload'
      'reactors';
    grid-area: right;
  }

  #sat-data-link {
    grid-area: sat-data-link;
    overflow: hidden; // Text in the #sat-data-link-console might overflow

    #sat-data-link-console {
      display: flex;
      flex-direction: column;
      height: 100%;
      padding: 8px;
      overflow: hidden;

      .text-container {
        margin-top: auto;

        // Just show the last 14 rows of text
        // TODO: Make it reactive (set to height of window)
        .console-text:nth-last-child(-n + 14) {
          display: block;
        }

        .console-text {
          display: none;
          overflow: hidden;
          white-space: pre;
          animation: typing calc(var(--anim-time) * 1ms) steps(var(--nr-chars), end);

          &:empty {
            height: 1em;
          }

          @keyframes typing {
            from {
              width: 0;
            }
            to {
              // Works because the OCR-A font is monospaced
              width: calc(var(--nr-chars) * 1ch);
            }
          }
        }
      }
    }

    #sat-data-link-upload-speed {
      counter-reset: num var(--sat-data-link-upload-speed-nr);

      &.animate-nr {
        animation: upload-speed-counter 3s infinite alternate cubic-bezier(0.42, 1.69, 0.75, -0.61);
      }

      &::after {
        content: counter(num);
      }

      @keyframes upload-speed-counter {
        from {
          --sat-data-link-upload-speed-nr: 415;
        }
        to {
          --sat-data-link-upload-speed-nr: 425;
        }
      }
    }
  }

  #upload {
    grid-area: upload;

    display: grid;
    grid-template-columns: auto 1fr 2fr;

    #tower-name {
      white-space: nowrap;
      width: min-content;
    }

    #loader {
      height: 100%;
      display: grid;
      grid-template-columns: repeat(6, 1fr);

      .cell:not(:last-of-type) {
        height: 100%;
        border-right: 4px solid var(--primary-color);
      }
    }
  }

  #reactors {
    grid-area: reactors;

    display: grid;
    grid-template-columns: 1fr 3fr 3fr 3fr 3fr 1fr;

    .reactor-column {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;

      .reactor {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;

        position: relative;
        width: 50px;
        aspect-ratio: 1/1;
        color: var(--primary-color-op50);
        border: 4px solid var(--primary-color-op50);

        &.active {
          color: var(--primary-color);
          border-color: var(--primary-color);

          &::after {
            border-right-color: var(--primary-color);
          }
        }

        &::after {
          content: '';
          position: absolute;
          top: -12px;
          left: -12px;
          border-top: 12px solid transparent;
          border-bottom: 12px solid transparent;
          border-left: 12px solid transparent;
          border-right: 12px solid var(--primary-color-op50);
          transform-origin: center;
          transform: rotate(45deg);
        }
      }

      .line {
        width: 4px;
        height: 30px;
        background: var(--primary-color-op50);
      }
    }

    .arrow-column {
      display: flex;
      flex-direction: column;
      justify-content: center;
      gap: 64px; // Visully put them in the center of each reactor box

      .arrow-right,
      .arrow-left {
        border-top: 8px solid transparent;
        border-bottom: 8px solid transparent;
      }

      .arrow-right {
        align-self: flex-end;
        border-left: 12px solid var(--primary-color-op50);

        &.active {
          border-left: 12px solid var(--primary-color);
        }
      }

      .arrow-left {
        align-self: flex-start;
        border-right: 12px solid var(--primary-color-op50);

        &.active {
          border-right: 12px solid var(--primary-color);
        }
      }
    }
  }

  #transmission-1,
  #transmission-2 {
    display: flex;
    flex-direction: column;
  }

  #scan-container {
    position: relative;
    height: 100%;

    #scan-squeegee {
      width: 4px;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      background: var(--primary-color);
      animation: squeegee 5s ease-in-out infinite alternate;
    }

    #scan-canvas {
      position: absolute;
      top: 0;
      left: 0;
    }
  }

  #tiles-container {
    flex: 1;
    display: grid;
    grid-template-columns: repeat(var(--tile-columns), 1fr);
    grid-template-rows: repeat(var(--tile-rows), 1fr);

    .tile {
      border: 2px solid var(--color-background);
      background: hsl(from var(--primary-color) h s l / var(--tile-opacity));

      &:hover {
        border-color: var(--primary-color);
      }
    }
  }

  #rssi {
    animation: rssi-counter 5s infinite alternate cubic-bezier(0.42, 1.19, 0.68, -0.34);
    counter-reset: num var(--rssi-nr);

    &::after {
      content: counter(num);
    }

    @keyframes rssi-counter {
      from {
        --rssi-nr: 69;
      }
      to {
        --rssi-nr: 83;
      }
    }
  }

  @keyframes pan-overlay {
    from {
      background-position: 0% 0%;
    }
    to {
      background-position: 0% -100%;
    }
  }

  @keyframes blink {
    to {
      visibility: hidden;
    }
  }

  @keyframes squeegee {
    to {
      left: calc(100% - 4px);
    }
  }
}
